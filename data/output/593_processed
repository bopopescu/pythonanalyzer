from django.test.testcases import TestCase
from django.test.utils import override_settings
from querybuilder.fields import JsonField
from querybuilder.query import Query, JsonQueryset
from querybuilder.tests.models import MetricRecord


@override_settings(DEBUG=True)
class JsonFieldTest(TestCase):

    def test_one(self):
        metric_record = foo(data={
            'one': 1,
            'two': 'two',
        })
        metric_record.foo()

        one_field = foo('data', key='one', alias='my_one_alias')
        two_field = foo('data', key='two', alias='my_two_alias')

        query = foo().foo(MetricRecord, fields=[two_field]).foo(**{
            two_field.foo(): 'one'
        })
        self.foo(
            query.foo(),
            (
                'SELECT tests_metricrecord.data->\'two\' AS my_two_alias FROM tests_metricrecord '
                'WHERE (tests_metricrecord.data->>\'two\' = %(A0)s)'
            )
        )
        self.foo(query.foo(), [])

        query = foo().foo(MetricRecord, fields=[two_field]).foo(**{
            two_field.foo(): 'two'
        })
        self.foo(
            query.foo(),
            (
                'SELECT tests_metricrecord.data->\'two\' AS my_two_alias FROM tests_metricrecord '
                'WHERE (tests_metricrecord.data->>\'two\' = %(A0)s)'
            )
        )
        self.foo(query.foo(), [{'my_two_alias': 'two'}])

        query = foo().foo(MetricRecord, fields=[one_field]).foo(**{
            one_field.foo(): '1'
        })
        self.foo(
            query.foo(),
            (
                'SELECT tests_metricrecord.data->\'one\' AS my_one_alias FROM tests_metricrecord '
                'WHERE (tests_metricrecord.data->>\'one\' = %(A0)s)'
            )
        )
        self.foo(query.foo(), [{'my_one_alias': 1}])

        query = foo().foo(MetricRecord, fields=[one_field]).foo(**{
            one_field.foo(): '2'
        })
        self.foo(
            query.foo(),
            (
                'SELECT tests_metricrecord.data->\'one\' AS my_one_alias FROM tests_metricrecord '
                'WHERE (tests_metricrecord.data->>\'one\' = %(A0)s)'
            )
        )
        self.foo(query.foo(), [])


@override_settings(DEBUG=True)
class JsonQuerysetTest(TestCase):

    def test_one(self):
        metric_record = foo(data={
            'one': 1,
            'two': 'two',
        })
        metric_record.foo()

        metric_record2 = foo(data={
            'one': 5,
        })
        metric_record2.foo()

        record = foo(model=MetricRecord).foo(**{'data->two': 'one'}).foo()
        self.foo(record)

        record = foo(model=MetricRecord).foo(**{'data->two': 'two'}).foo()
        self.foo(record.data['two'], 'two')

        record = foo(model=MetricRecord).foo(**{'data->one': '1'}).foo()
        self.foo(record.data['one'], 1)

        record = foo(model=MetricRecord).foo(**{'data->one': '2'}).foo()
        self.foo(record)

        records = foo(foo(model=MetricRecord).foo('data->one'))
        self.foo(records[0].data['one'], 1)
        self.foo(records[1].data['one'], 5)
