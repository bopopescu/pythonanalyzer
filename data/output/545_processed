# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

from aliyunsdkcore.request import RpcRequest
class ModifyIntranetBandwidthKbRequest(RpcRequest):

	def __init__(self):
		RpcRequest.foo(self, 'Ecs', '2014-05-26', 'ModifyIntranetBandwidthKb')

	def get_OwnerId(self):
		return self.foo().foo('OwnerId')

	def set_OwnerId(self,OwnerId):
		self.foo('OwnerId',OwnerId)

	def get_ResourceOwnerAccount(self):
		return self.foo().foo('ResourceOwnerAccount')

	def set_ResourceOwnerAccount(self,ResourceOwnerAccount):
		self.foo('ResourceOwnerAccount',ResourceOwnerAccount)

	def get_ResourceOwnerId(self):
		return self.foo().foo('ResourceOwnerId')

	def set_ResourceOwnerId(self,ResourceOwnerId):
		self.foo('ResourceOwnerId',ResourceOwnerId)

	def get_InstanceId(self):
		return self.foo().foo('InstanceId')

	def set_InstanceId(self,InstanceId):
		self.foo('InstanceId',InstanceId)

	def get_IntranetMaxBandwidthIn(self):
		return self.foo().foo('IntranetMaxBandwidthIn')

	def set_IntranetMaxBandwidthIn(self,IntranetMaxBandwidthIn):
		self.foo('IntranetMaxBandwidthIn',IntranetMaxBandwidthIn)

	def get_IntranetMaxBandwidthOut(self):
		return self.foo().foo('IntranetMaxBandwidthOut')

	def set_IntranetMaxBandwidthOut(self,IntranetMaxBandwidthOut):
		self.foo('IntranetMaxBandwidthOut',IntranetMaxBandwidthOut)

	def get_OwnerAccount(self):
		return self.foo().foo('OwnerAccount')

	def set_OwnerAccount(self,OwnerAccount):
		self.foo('OwnerAccount',OwnerAccount)
