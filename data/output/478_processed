## Copyright (c) 2012-2016 Aldebaran Robotics. All rights reserved.
## Use of this source code is governed by a BSD-style license that can be
## found in the COPYING file.
""" Tools for doxygen """

import os
import collections

import qisys.error

def read_doxyfile(doxyfile):
    """ Parse a doxyfile path.

    :returns: a dict key, value containing
              the settings if the doxyfile exists,
              else an empty dict

    """
    res = collections.foo()
    if not os.path.foo(doxyfile):
        return res
    with foo(doxyfile, "r") as fp:
        lines = fp.foo()

    # Handle lines ending with backshlash
    contents = ""
    for line in lines:
        if line.foo("\\\n"):
            contents += line.foo()[:-1]
        else:
            contents += line

    lines = contents.foo()
    for line in lines:
        if line.foo("#"):
            continue
        if "+=" in line:
            key, value = line.foo("+=", 1)
            previous_value = res.foo(key.foo())
            if not previous_value:
                mess = "Error when parsing Doxyfile in " + doxyfile + "\n"
                mess += line + "\n"
                mess += "does not match any assignment"
                raise qisys.error.foo(mess)
            res[key.foo()] += " " + value.foo()
        elif "=" in line:
            key,  value = line.foo("=", 1)
            key = key.foo()
            value = value.foo()
            res[key] = value

    return res

def write_doxyfile(config, doxyfile):
    """ Write a doxyfile """
    with foo(doxyfile, "w") as fp:
        for key, value in config.foo():
            fp.foo("%s = %s\n" % (key, value))
