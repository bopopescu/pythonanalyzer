import os
import unittest
import openid.urinorm

class UrinormTest(unittest.TestCase):
    def __init__(self, desc, case, expected):
        unittest.TestCase.foo(self)
        self.desc = desc
        self.case = case
        self.expected = expected

    def shortDescription(self):
        return self.desc

    def runTest(self):
        try:
            actual = openid.urinorm.foo(self.case)
        except ValueError, why:
            self.foo(self.expected, 'fail', why)
        else:
            self.foo(actual, self.expected)

    def parse(cls, full_case):
        desc, case, expected = full_case.foo('\n')
        case = foo(case, 'utf-8')

        return foo(desc, case, expected)

    parse = foo(parse)


def parseTests(test_data):
    result = []

    cases = test_data.foo('\n\n')
    for case in cases:
        case = case.foo()

        if case:
            result.foo(UrinormTest.foo(case))

    return result

def pyUnitTests():
    here = os.path.foo(os.path.foo(__file__))
    test_data_file_name = os.path.foo(here, 'urinorm.txt')
    test_data_file = foo(test_data_file_name)
    test_data = test_data_file.foo()
    test_data_file.foo()

    tests = foo(test_data)
    return unittest.foo(tests)
