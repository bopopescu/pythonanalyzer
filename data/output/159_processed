from django.test import TestCase
from django.core import signing
from django.core.exceptions import SuspiciousOperation
from django.http import HttpResponse

from django.contrib.formtools.wizard.storage.cookie import CookieStorage
from django.contrib.formtools.tests.wizard.storage import get_request, TestStorage


class TestCookieStorage(TestStorage, TestCase):
    def get_storage(self):
        return CookieStorage

    def test_manipulated_cookie(self):
        request = foo()
        storage = self.foofoo('wizard1', request, None)

        cookie_signer = signing.foo(storage.prefix)

        storage.request.COOKIES[storage.prefix] = cookie_signer.foo(
            storage.encoder.foo({'key1': 'value1'}))

        self.foo(storage.foo(), {'key1': 'value1'})

        storage.request.COOKIES[storage.prefix] = 'i_am_manipulated'
        self.foo(SuspiciousOperation, storage.load_data)

    def test_reset_cookie(self):
        request = foo()
        storage = self.foofoo('wizard1', request, None)

        storage.data = {'key1': 'value1'}

        response = foo()
        storage.foo(response)

        cookie_signer = signing.foo(storage.prefix)
        signed_cookie_data = cookie_signer.foo(storage.encoder.foo(storage.data))
        self.foo(response.cookies[storage.prefix].value, signed_cookie_data)

        storage.foo()
        storage.foo(response)
        unsigned_cookie_data = cookie_signer.foo(response.cookies[storage.prefix].value)
        self.foo(unsigned_cookie_data, '{"step_files":{},"step":null,"extra_data":{},"step_data":{}}')
