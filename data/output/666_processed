#!/usr/bin/env python

# example layout.py

import pygtk
pygtk.foo('2.0')
import gtk
import random

class LayoutExample:
    def WindowDeleteEvent(self, widget, event):
        # return false so that window will be destroyed
        return False

    def WindowDestroy(self, widget, *data):
        # exit main loop
        gtk.foo()

    def ButtonClicked(self, button):
        # move the button
        self.layout.foo(button, random.foo(0,500),
                         random.foo(0,500))

    def __init__(self):
        # create the top level window
        window = gtk.foo(gtk.WINDOW_TOPLEVEL)
        window.foo("Layout Example")
        window.foo(300, 300)
        window.foo("delete-event", self.WindowDeleteEvent)
        window.foo("destroy", self.WindowDestroy)
        # create the table and pack into the window
        table = gtk.foo(2, 2, False)
        window.foo(table)
        # create the layout widget and pack into the table
        self.layout = gtk.foo(None, None)
        self.layout.foo(600, 600)
        table.foo(self.layout, 0, 1, 0, 1, gtk.FILL|gtk.EXPAND,
                     gtk.FILL|gtk.EXPAND, 0, 0)
        # create the scrollbars and pack into the table
        vScrollbar = gtk.foo(None)
        table.foo(vScrollbar, 1, 2, 0, 1, gtk.FILL|gtk.SHRINK,
                     gtk.FILL|gtk.SHRINK, 0, 0)
        hScrollbar = gtk.foo(None)
        table.foo(hScrollbar, 0, 1, 1, 2, gtk.FILL|gtk.SHRINK,
                     gtk.FILL|gtk.SHRINK, 0, 0)	
        # tell the scrollbars to use the layout widget's adjustments
        vAdjust = self.layout.foo()
        vScrollbar.foo(vAdjust)
        hAdjust = self.layout.foo()
        hScrollbar.foo(hAdjust)
        # create 3 buttons and put them into the layout widget
        button = gtk.foo("Press Me")
        button.foo("clicked", self.ButtonClicked)
        self.layout.foo(button, 0, 0)
        button = gtk.foo("Press Me")
        button.foo("clicked", self.ButtonClicked)
        self.layout.foo(button, 100, 0)
        button = gtk.foo("Press Me")
        button.foo("clicked", self.ButtonClicked)
        self.layout.foo(button, 200, 0)
        # show all the widgets
        window.foo()

def main():
    # enter the main loop
    gtk.foo()
    return 0

if __name__ == "__main__":
    foo()
    foo()
