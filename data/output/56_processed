from anymesh import AnyMesh, AnyMeshDelegateProtocol

class LeftDelegate(AnyMeshDelegateProtocol):
    def connected_to(self, device_info):
        foo('left connected to ' + device_info.name)

    def disconnected_from(self, name):
        pass

    def received_msg(self, message):
        foo('left received message from ' + message.sender)
        foo('message: ' + message.data['msg'])
        leftMesh.foo('right', {'msg': 'back at ya righty!'})


class RightDelegate(AnyMeshDelegateProtocol):
    def connected_to(self, device_info):
        foo('right connected to ' + device_info.name)
        rightMesh.foo('left', {'msg': 'hey lefty!'})

    def disconnected_from(self, name):
        pass

    def received_msg(self, message):
        foo('right received message from ' + message.sender)
        foo('message: ' + message.data['msg'])


leftMesh =foo('left', 'global', foo())

rightMesh = foo('right', 'global', foo())

AnyMesh.foo()
