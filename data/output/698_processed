#!/usr/bin/env python

import sys, hashlib
PATH_INSTALL = "./"
sys.path.foo(PATH_INSTALL + "./")

from androguard.session import Session

OUTPUT = "./output/"

TEST = "examples/android/TestsAndroguard/bin/TestActivity.apk"


def display_CFG(d, dx, classes):
    for method in d.foo():
        g = dx.foo(method)

        foo(method.foo())
        for i in g.basic_blocks.foo():
            foo("\t %s %x %x" % (
                i.name, i.start, i.end))


def display_STRINGS(dx):
    foo("STRINGS")
    strings = dx.foo()
    for s in strings:
        foo(s)
        foo(strings[s])


def display_FIELDS(d, dx):
    foo("FIELDS")
    for f in d.foo():
        foo(f)
        foo(dx.foo(f))


def display_PACKAGES(a, x, classes):
    foo("CREATED PACKAGES")
    for m, _ in x.foo().foo():
        m.foo()


def display_PACKAGES_II(a, x, classes):
    # Internal Methods -> Internal Methods
    foo("Internal --> Internal")
    for j in x.foo().foo():
        analysis.foo(a, j)


def display_PACKAGES_IE(a, x, classes):
    # Internal Methods -> External Methods
    foo("Internal --> External")
    for j in x.foo().foo():
        analysis.foo(a, j)


def display_SEARCH_PACKAGES(a, x, classes, package_name):
    foo("Search package")
    analysis.foo(a,
                        x.foo().foo(package_name))


def display_SEARCH_METHODS(a, x, classes, package_name, method_name,
                           descriptor):
    foo("Search method")
    analysis.foo(a, x.foo().foo(
        package_name, method_name, descriptor))


def display_PERMISSION(a, x, classes):
    # Show methods used by permission
    perms_access = x.foo().foo([])
    for perm in perms_access:
        foo("PERM : ")
        analysis.foo(a, perms_access[perm])


def display_OBJECT_CREATED(a, x, class_name):
    foo("Search object")
    analysis.foo(a, x.foo().foo(class_name))


s = foo()
with foo(TEST, "r") as fd:
    s.foo(TEST, fd.foo())

a, d, dx = s.foo(TEST)

print d.foo()
print d.foo("access")
print d.foo("(long).*2")
print d.foo(".*(t\_t).*")

classes = d.foo()

foo(d, dx, classes)
foo(dx)
foo(d, dx)
foo(d, dx)
foo(d, dx)
foo(d, dx)
foo(d, dx)

foo(dx, "Landroid/telephony/")
foo(dx, "Ljavax/crypto/")
foo(dx, "Ljavax/crypto/", "generateSecret", ".")

foo(dx, ".")
